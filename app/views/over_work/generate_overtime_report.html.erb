<%= form_with url: do_generate_ov_path(format: :xlsx), method: :post, local: true, id: 'main-form' do |f| %>
  <fieldset style="margin-bottom: 20px;">
    <legend><strong>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:</strong></legend>
    <div style="display: flex; gap: 20px; flex-wrap: wrap; align-items: flex-end;">
      <div>
        <label>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</label><br>
        <%= f.date_field :start_date, id: 'start_date_picker' %>
      </div>

      <div>
        <label>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</label><br>
        <%= f.date_field :end_date, id: 'end_date_picker' %>
      </div>

      <div>
        <label>–¢–∏–ø —Ä–∞–±–æ—Ç:</label><br>
        <%= select_tag :work_type, options_for_select([['–í—Å–µ –¥–Ω–∏', 'all'], ['–ë—É–¥–Ω–∏', 'weekdays'], ['–í—ã—Ö–æ–¥–Ω—ã–µ', 'weekends']]), id: 'work_type_select' %>
      </div>

      <div>
        <button type="button" id="filter_button" class="button">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</button>
      </div>
    </div>
  </fieldset>

  <fieldset style="margin-bottom: 20px;">
    <legend><strong>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞–º–∏:</strong></legend>
    <div id="user_cards_container" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 10px;">
      <!-- –ö–∞—Ä—Ç–æ—á–∫–∏ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ –≤—Å—Ç–∞–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ JS -->
    </div>
  </fieldset>

  <fieldset style="margin-bottom: 20px;">
    <legend><strong>–¢–∏–ø –æ—Ç—á–µ—Ç–∞:</strong></legend>
    <%= select_tag :option_select, options_for_select([['–í –≤—ã—Ö–æ–¥–Ω—ã–µ', 'option_1'], ['–í –±—É–¥–Ω–∏', 'option_2']]), include_blank: '--- –í—ã–±–µ—Ä–∏—Ç–µ ---' %>
  </fieldset>

  <%= f.submit "üìä –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å Excel –æ—Ç—á—ë—Ç", class: "button", style: "margin-right: 10px;"%>
<% end %>

<%= form_with url: do_dokladnaya_path(format: :xlsx), method: :post, local: true, id: "docx-form" do |f| %>
  <div id="docx-hidden-fields"></div>
  <%= f.submit "üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É–∂–µ–±–Ω—É—é –∑–∞–ø–∏—Å–∫—É", class: "button" %>
<% end %>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function () {
    const startInput = document.getElementById('start_date_picker');
    const endInput = document.getElementById('end_date_picker');
    const userContainer = document.getElementById('user_cards_container');

    function getWeekdayName(dateStr) {
      const days = ['–≤—Å', '–ø–Ω', '–≤—Ç', '—Å—Ä', '—á—Ç', '–ø—Ç', '—Å–±'];
      const d = new Date(dateStr);
      return days[d.getDay()];
    }

    function fetchUsers() {
      const startDate = startInput.value;
      const endDate = endInput.value;

      if (!startDate || !endDate) {
        userContainer.innerHTML = '<p>–£–∫–∞–∂–∏—Ç–µ –æ–±–µ –¥–∞—Ç—ã</p>';
        return;
      }

      fetch(`/overtime_report/users_by_date?start_date=${startDate}&end_date=${endDate}`, {
        headers: { 'Accept': 'application/json' }
      })
      .then(response => response.json())
      .then(data => {
        userContainer.innerHTML = '';

        if (data.length === 0) {
          userContainer.innerHTML = '<p>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞–º–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</p>';
          return;
        }

        data.forEach(user => {
          const card = document.createElement('div');
          card.className = 'user-card';

          const checkbox = document.createElement('input');
          checkbox.type = 'checkbox';
          checkbox.id = `user_${user.id}`;
          checkbox.name = 'user_ids[]';
          checkbox.value = user.id;

          const label = document.createElement('label');
          label.setAttribute('for', checkbox.id);
          label.textContent = user.name;

          const dateList = document.createElement('ul');
          dateList.className = 'date-list';

          user.dates.forEach(date => {
            const item = document.createElement('li');
            item.textContent = `${date} (${getWeekdayName(date)})`;
            dateList.appendChild(item);
          });

          card.appendChild(checkbox);
          card.appendChild(label);
          card.appendChild(dateList);
          userContainer.appendChild(card);
        });
      });
    }

    startInput.addEventListener('change', fetchUsers);
    endInput.addEventListener('change', fetchUsers);
  });
<% end %>



<style>
  .button {
    background-color: #007bff !important;
    color: white !important;
    padding: 6px 12px !important;
    border-radius: 4px !important;
    border: none !important;
    cursor: pointer !important;
  }

  .button:hover {
    background-color: #0056b3 !important;
  }

    #user_cards_container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 12px;
  }

  .user-card {
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 8px;
    background-color: #f9f9f9;
    font-size: 14px;
  }

  .user-card label {
    font-weight: bold;
    display: block;
    margin-bottom: 4px;
  }

  .date-list {
    margin: 6px 0 0 0;
    padding-left: 18px;
    font-size: 12px;
    color: #555;
    max-height: 100px;
    overflow-y: auto;
  }

  .date-list li {
    list-style-type: disc;
    margin-bottom: 2px;
  }
</style>
