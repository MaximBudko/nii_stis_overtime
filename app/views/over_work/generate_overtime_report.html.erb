<%= form_with url: do_generate_ov_path(format: :xlsx), method: :post, local: true, id: 'main-form' do |f| %>
  <fieldset style="margin-bottom: 20px;">
    <legend><strong>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:</strong></legend>
    <div style="display: flex; gap: 20px; flex-wrap: wrap; align-items: flex-end;">
      <div>
        <label>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</label><br>
        <%= f.date_field :start_date, value: Date.today.beginning_of_month, id: 'start_date_picker' %>
      </div>

      <div>
        <label>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</label><br>
        <%= f.date_field :end_date, value: Date.today, id: 'end_date_picker' %>
      </div>

      <div>
        <label>–¢–∏–ø —Ä–∞–±–æ—Ç:</label><br>
        <%= select_tag :work_type, options_for_select([['–í—Å–µ –¥–Ω–∏', 'all'], ['–ë—É–¥–Ω–∏', 'weekdays'], ['–í—ã—Ö–æ–¥–Ω—ã–µ', 'weekends']]), id: 'work_type_select' %>
      </div>

      <div>
        <button type="button" id="filter_button" class="button">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</button>
      </div>
    </div>
  </fieldset>

  <fieldset style="margin-bottom: 20px;">
    <legend><strong>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞–º–∏:</strong></legend>
    <div id="user_cards_container" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 10px;">
      <!-- –ö–∞—Ä—Ç–æ—á–∫–∏ —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ –≤—Å—Ç–∞–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ JS -->
    </div>
  </fieldset>

  <fieldset style="margin-bottom: 20px;">
    <legend><strong>–¢–∏–ø –æ—Ç—á–µ—Ç–∞:</strong></legend>
    <%= select_tag :option_select, options_for_select([['–í –≤—ã—Ö–æ–¥–Ω—ã–µ', 'option_1'], ['–í –±—É–¥–Ω–∏', 'option_2']]), include_blank: '--- –í—ã–±–µ—Ä–∏—Ç–µ ---' %>
  </fieldset>

  <%= f.submit "üìä –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å Excel –æ—Ç—á—ë—Ç", class: "button", style: "margin-right: 10px;"%>
<% end %>

<%= form_with url: do_dokladnaya_path(format: :xlsx), method: :post, local: true, id: "docx-form" do |f| %>
  <div id="docx-hidden-fields"></div>
  <%= f.submit "üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É–∂–µ–±–Ω—É—é –∑–∞–ø–∏—Å–∫—É", class: "button" %>
<% end %>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function () {
    const startInput = document.getElementById('start_date_picker');
    const endInput = document.getElementById('end_date_picker');
    const typeSelect = document.getElementById('work_type_select');
    const filterButton = document.getElementById('filter_button');
    const userContainer = document.getElementById('user_cards_container');
    const docxHidden = document.getElementById('docx-hidden-fields');
    const mainForm = document.getElementById('main-form');
    const docxForm = document.getElementById('docx-form');

    function loadUsers() {
      const start = startInput.value;
      const end = endInput.value;
      const workType = typeSelect.value;

      if (!start || !end) {
        alert('–£–∫–∞–∂–∏—Ç–µ –æ–±–µ –¥–∞—Ç—ã');
        return;
      }

      fetch(`/overtime_report/users_by_date?start_date=${start}&end_date=${end}&work_type=${workType}`, {
        headers: { 'Accept': 'application/json' }
      })
      .then(response => response.json())
      .then(data => {
        userContainer.innerHTML = '';

        if (data.length === 0) {
          userContainer.innerHTML = '<p>–ù–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–∞–º–∏ –ø–æ —É—Å–ª–æ–≤–∏—è–º</p>';
          return;
        }

        data.forEach(user => {
          const card = document.createElement('div');
          card.style = 'border: 1px solid #ccc; padding: 10px; border-radius: 6px; background: #f9f9f9; min-width: 150px;';

          const checkbox = document.createElement('input');
          checkbox.type = 'checkbox';
          checkbox.id = `user_${user.id}`;
          checkbox.name = 'user_ids[]';
          checkbox.value = user.id;

          const label = document.createElement('label');
          label.setAttribute('for', checkbox.id);
          label.textContent = user.name;
          label.style = 'margin-left: 5px;';

          card.appendChild(checkbox);
          card.appendChild(label);
          userContainer.appendChild(card);
        });
      });
    }

    filterButton.addEventListener('click', loadUsers);
    loadUsers();

    // –ö–æ–ø–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–æ—Ä–º—É —Å–ª—É–∂–µ–±–∫–∏
    docxForm.addEventListener('submit', function (e) {
      docxHidden.innerHTML = '';

      document.querySelectorAll('#main-form input[name="user_ids[]"]:checked').forEach(input => {
        const hidden = document.createElement('input');
        hidden.type = 'hidden';
        hidden.name = 'user_ids[]';
        hidden.value = input.value;
        docxHidden.appendChild(hidden);
      });

      ['start_date', 'end_date', 'option_select'].forEach(name => {
        const value = document.querySelector(`#main-form [name="${name}"]`)?.value;
        if (value) {
          const hidden = document.createElement('input');
          hidden.type = 'hidden';
          hidden.name = name;
          hidden.value = value;
          docxHidden.appendChild(hidden);
        }
      });
    });
  });
<% end %>

<style>
  .button {
    background-color: #007bff !important;
    color: white !important;
    padding: 6px 12px !important;
    border-radius: 4px !important;
    border: none !important;
    cursor: pointer !important;
  }

  .button:hover {
    background-color: #0056b3 !important;
  }
</style>
